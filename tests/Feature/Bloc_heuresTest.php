<?php

namespace Tests\Feature;

use App\Models\Bloc_heures;
use Illuminate\Foundation\Testing\DatabaseTransactions;
use Tests\TestCase;

class Bloc_heuresTest extends TestCase
{
    use DatabaseTransactions;
    private Bloc_heures $bloc_heures;
    /**
     * @author Philippe Bertrand
     *
     * A basic feature test example.
     */
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->bloc_heures = Bloc_heures::factory(1)->createOne([
            'jour'=> '4',
            'heures' => '00001111000011110000',
        ]);

        //Création d'un setup qui détecte une colonne inconnu
        /*
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->bloc_heures = Bloc_heures::factory(1)->createOne([
            'jour'=> '4',
            'heures' => '00001111000011110000',
            'champ_erreur' => -1
        ]); */
    }

    public function test_index_create(): void
    {
        //Vue show
        $response = $this->get('/bloc_heures');

        $response->assertStatus(200);

        $response->assertSee('Liste des blocs');

        // Vue index erreur

        $response = $this->get('/bloc_heure');

        $response->assertStatus(404);


    }
    public function test_creation_vue(): void
    {
        //Vue de création
        $response = $this->get('/bloc_heures/nouveau');

        $response->assertStatus(200);

        $response->assertSee('Nouveau bloc');

        $response = $this->get('bloc_heures/nouveaux');

        $response->assertStatus(500);
    }

    public function test_show(): void
    {
        $reponse = $this->get("/bloc_heures/{$this->bloc_heures->id}");
        $reponse->assertStatus(200);
    }

    public function testDatabaseMissing()
    {
        $this->assertDatabaseMissing('bloc_heures',[
            'jour' => '1',
            'heures' => '11111111000000001111',
        ]);

        //Utiliser ce test avec un bloc de cours qui existe pour voir si le test échoue

        /* $this->assertDatabaseMissing('bloc_heures',[
             'jour' => '4',
             'heures' => '00000000000000001111',

         ]); */
    }

    public function testDatabaseHas()
    {
        $this->assertDatabaseHas('bloc_heures',[
            'jour' => '4',
            'heures' => '00001111000011110000',
        ]);

        // Création d'un bloc de cours qui n'existe pas pour détecter une erreur

        /*   $this->assertDatabaseHas('bloc_heures',[
           'jour' => '1',
           'heures' => '11111111000000001111',
       ]); */

    }
}
